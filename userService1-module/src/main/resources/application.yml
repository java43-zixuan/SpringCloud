spring:
  # 配置文件上传大小限制
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  application:
    name: userService1-module
#针对Date类型时间，可以做到全局格式化
#  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://119.3.221.244:3306/cloudtest?autoReconnect=true&characterEncoding=utf-8&allowMultiQueries=true
    username: root
    password: Zx496267.
#  kafka:
#    producer:
#      bootstrap:
#        servers: 127.0.0.1:9092
#      key:
#        serializer:
#          class: org.apache.kafka.common.serialization.StringSerializer
#      value:
#        serializer:
#          class: org.apache.kafka.common.serialization.ByteArraySerializer
#    consumer:
#      bootstrap:
#        servers: 127.0.0.1:9092
#      # properties:
#      #   security:
#      #     protocol: PLAINTEXT
#      key:
#        serializer:
#          class: org.apache.kafka.common.serialization.StringSerializer
#      value:
#        serializer:
#          class: org.apache.kafka.common.serialization.ByteArraySerializer

server:
  port: 8003
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://119.3.221.244:8001/eureka/

mybatis-plus:
  # 修改 mybatis 的 DefaultEnumTypeHandler
  configuration:
    default-enum-type-handler: com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      #逻辑删除定义
      logic-delete-field: delFlag # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置@TableLogic)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

redis:
  database: 1
#  host: localhost
#  port: 6379
  password:
  sentinel:
    master: mymaster #指定maser名称
    nodes: 119.3.221.244:27001,119.3.221.244:27002,119.3.221.244:27003
  pool:
    maxIdle: 30
    minIdle: 1
    maxActive: 20
    maxWait: -1
  redisson:
    # file: classpath:redisson.yaml
    config:
      # 单机
      # singleServerConfig:
          # password: null
          # timeout: 10000
          # address: redis://10.210.10.154:7004
      # 集群
      clusterServersConfig:
        nodeAddresses:
        - "redis://119.3.221.244:27001"
        - "redis://119.3.221.244:27002"
        - "redis://119.3.221.244:27003"
        password:
        loadBalancer: org.redisson.connection.balancer.RoundRobinLoadBalancer
        slaveConnectionMinimumIdleSize: 8
        slaveConnectionPoolSize: 16
        sslEnableEndpointIdentification: false
        timeout: 3000

      # 所有Redis节点客户端之间共享的线程数量，默认值: 当前处理核数量 * 2
      threads: 24
      # Netty线程池数量，默认值: 当前处理核数量 * 2
      nettyThreads: 12
      # 传输模式，默认值：NIO
      transportMode: NIO

minio:
  url: http://127.0.0.1:9090    #minio启动后的API对应地址
  bucket: test                  #创建的存储桶名称（可界面创建，亦可sdk代码创建）
  accessKey: D2HI8s3y8OmoxCJ3   #Identity 中创建service Acounts 里的
  secretKey: HJvk5MM69nghomgTeoAzI5cXtddoLHJD   #Identity 中创建service Acounts 里的


seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: seata-server
  # 是否自动开启数据源代理
  enable-auto-data-source-proxy: true
  # 数据源代理模式，使用AT模式
  data-source-proxy-mode: AT
  service:
    # 事务群组
    vgroupMapping:
      seata-server: default  # default 的值为集群的名字，在配置 seata service 的时候指定的
    grouplist:
      default: 119.3.221.244:8091
    enable-degrade: false
    # 全局事务开关
    disable-global-transaction: false
  config:
    type: file
    file:
      name: file.conf
  registry:
    type: file
    file:
      name: file

